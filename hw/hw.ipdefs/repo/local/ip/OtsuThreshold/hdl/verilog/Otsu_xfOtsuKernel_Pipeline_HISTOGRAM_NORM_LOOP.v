// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Otsu_xfOtsuKernel_Pipeline_HISTOGRAM_NORM_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_hist_0_address0,
        p_hist_0_ce0,
        p_hist_0_q0,
        wdt_1_cast,
        sh_prom_i177_cast_cast_cast_cast,
        sh_prom4_i183_cast_cast_cast_cast,
        cmp_i174,
        conv3_i12_i_i156,
        sh_prom_i_cast_cast_cast_cast,
        sh_prom4_i_cast_cast_cast_cast,
        cmp_i,
        HistArray_address0,
        HistArray_ce0,
        HistArray_we0,
        HistArray_d0,
        grp_fu_654_p_din0,
        grp_fu_654_p_din1,
        grp_fu_654_p_dout0,
        grp_fu_654_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] p_hist_0_address0;
output   p_hist_0_ce0;
input  [31:0] p_hist_0_q0;
input  [31:0] wdt_1_cast;
input  [6:0] sh_prom_i177_cast_cast_cast_cast;
input  [7:0] sh_prom4_i183_cast_cast_cast_cast;
input  [0:0] cmp_i174;
input  [31:0] conv3_i12_i_i156;
input  [6:0] sh_prom_i_cast_cast_cast_cast;
input  [7:0] sh_prom4_i_cast_cast_cast_cast;
input  [0:0] cmp_i;
output  [7:0] HistArray_address0;
output   HistArray_ce0;
output   HistArray_we0;
output  [32:0] HistArray_d0;
output  [31:0] grp_fu_654_p_din0;
output  [31:0] grp_fu_654_p_din1;
input  [63:0] grp_fu_654_p_dout0;
output   grp_fu_654_p_ce;

reg ap_idle;
reg p_hist_0_ce0;
reg HistArray_ce0;
reg HistArray_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln75_fu_188_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [76:0] sh_prom4_i_cast_cast_cast_cast_cast_cast_fu_144_p1;
reg   [76:0] sh_prom4_i_cast_cast_cast_cast_cast_cast_reg_286;
wire   [76:0] sh_prom_i_cast_cast_cast_cast_cast_cast_fu_152_p1;
reg   [76:0] sh_prom_i_cast_cast_cast_cast_cast_cast_reg_291;
wire   [76:0] conv3_i12_i_i156_cast_fu_156_p1;
reg   [76:0] conv3_i12_i_i156_cast_reg_296;
wire   [76:0] sh_prom4_i183_cast_cast_cast_cast_cast_cast_fu_164_p1;
reg   [76:0] sh_prom4_i183_cast_cast_cast_cast_cast_cast_reg_301;
wire   [76:0] sh_prom_i177_cast_cast_cast_cast_cast_cast_fu_172_p1;
reg   [76:0] sh_prom_i177_cast_cast_cast_cast_cast_cast_reg_306;
wire   [63:0] wdt_1_cast_cast_fu_176_p1;
reg   [63:0] wdt_1_cast_cast_reg_311;
wire   [63:0] zext_ln75_fu_200_p1;
reg   [63:0] zext_ln75_reg_320;
reg   [63:0] zext_ln75_reg_320_pp0_iter1_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter2_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter3_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter4_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter5_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter6_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter7_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter8_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter9_reg;
reg   [63:0] zext_ln75_reg_320_pp0_iter10_reg;
reg   [31:0] p_hist_0_load_reg_330;
wire   [63:0] zext_ln80_fu_210_p1;
reg   [63:0] mul_ln80_reg_340;
wire   [44:0] tmp2_fu_235_p3;
reg   [44:0] tmp2_reg_345;
wire   [76:0] grp_fu_136_p2;
reg   [76:0] mul_ln81_reg_355;
wire   [32:0] select_ln81_fu_262_p3;
reg   [32:0] select_ln81_reg_361;
wire    ap_block_pp0_stage0;
reg   [8:0] i_fu_54;
wire   [8:0] add_ln75_fu_194_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_3;
wire   [44:0] grp_fu_136_p0;
wire   [31:0] grp_fu_136_p1;
wire  signed [31:0] sh_prom4_i_cast_cast_cast_cast_cast_fu_140_p1;
wire  signed [31:0] sh_prom_i_cast_cast_cast_cast_cast_fu_148_p1;
wire  signed [31:0] sh_prom4_i183_cast_cast_cast_cast_cast_fu_160_p1;
wire  signed [31:0] sh_prom_i177_cast_cast_cast_cast_cast_fu_168_p1;
wire   [76:0] zext_ln80_1_fu_214_p1;
wire   [76:0] lshr_ln80_fu_217_p2;
wire   [76:0] shl_ln80_fu_222_p2;
wire   [44:0] trunc_ln80_fu_227_p1;
wire   [44:0] trunc_ln80_1_fu_231_p1;
wire   [76:0] lshr_ln81_fu_246_p2;
wire   [76:0] shl_ln81_fu_250_p2;
wire   [32:0] trunc_ln81_fu_254_p1;
wire   [32:0] trunc_ln81_1_fu_258_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [76:0] grp_fu_136_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Otsu_mul_45ns_32ns_77_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 77 ))
mul_45ns_32ns_77_5_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_136_p0),
    .din1(grp_fu_136_p1),
    .ce(1'b1),
    .dout(grp_fu_136_p2)
);

Otsu_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln75_fu_188_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_54 <= add_ln75_fu_194_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_54 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul_ln80_reg_340 <= grp_fu_654_p_dout0;
        mul_ln81_reg_355 <= grp_fu_136_p2;
        select_ln81_reg_361 <= select_ln81_fu_262_p3;
        tmp2_reg_345 <= tmp2_fu_235_p3;
        zext_ln75_reg_320_pp0_iter10_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter9_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter2_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter1_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter3_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter2_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter4_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter3_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter5_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter4_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter6_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter5_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter7_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter6_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter8_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter7_reg[8 : 0];
        zext_ln75_reg_320_pp0_iter9_reg[8 : 0] <= zext_ln75_reg_320_pp0_iter8_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv3_i12_i_i156_cast_reg_296[31 : 0] <= conv3_i12_i_i156_cast_fu_156_p1[31 : 0];
        p_hist_0_load_reg_330 <= p_hist_0_q0;
        sh_prom4_i183_cast_cast_cast_cast_cast_cast_reg_301[31 : 0] <= sh_prom4_i183_cast_cast_cast_cast_cast_cast_fu_164_p1[31 : 0];
        sh_prom4_i_cast_cast_cast_cast_cast_cast_reg_286[31 : 0] <= sh_prom4_i_cast_cast_cast_cast_cast_cast_fu_144_p1[31 : 0];
        sh_prom_i177_cast_cast_cast_cast_cast_cast_reg_306[31 : 0] <= sh_prom_i177_cast_cast_cast_cast_cast_cast_fu_172_p1[31 : 0];
        sh_prom_i_cast_cast_cast_cast_cast_cast_reg_291[31 : 0] <= sh_prom_i_cast_cast_cast_cast_cast_cast_fu_152_p1[31 : 0];
        wdt_1_cast_cast_reg_311[31 : 0] <= wdt_1_cast_cast_fu_176_p1[31 : 0];
        zext_ln75_reg_320_pp0_iter1_reg[8 : 0] <= zext_ln75_reg_320[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_188_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln75_reg_320[8 : 0] <= zext_ln75_fu_200_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        HistArray_ce0 = 1'b1;
    end else begin
        HistArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        HistArray_we0 = 1'b1;
    end else begin
        HistArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln75_fu_188_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_54;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_hist_0_ce0 = 1'b1;
    end else begin
        p_hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HistArray_address0 = zext_ln75_reg_320_pp0_iter10_reg;

assign HistArray_d0 = select_ln81_reg_361;

assign add_ln75_fu_194_p2 = (ap_sig_allocacmp_i_3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv3_i12_i_i156_cast_fu_156_p1 = conv3_i12_i_i156;

assign grp_fu_136_p0 = grp_fu_136_p00;

assign grp_fu_136_p00 = tmp2_reg_345;

assign grp_fu_136_p1 = conv3_i12_i_i156_cast_reg_296;

assign grp_fu_654_p_ce = 1'b1;

assign grp_fu_654_p_din0 = zext_ln80_fu_210_p1;

assign grp_fu_654_p_din1 = wdt_1_cast_cast_reg_311;

assign icmp_ln75_fu_188_p2 = ((ap_sig_allocacmp_i_3 == 9'd256) ? 1'b1 : 1'b0);

assign lshr_ln80_fu_217_p2 = zext_ln80_1_fu_214_p1 >> sh_prom_i177_cast_cast_cast_cast_cast_cast_reg_306;

assign lshr_ln81_fu_246_p2 = mul_ln81_reg_355 >> sh_prom_i_cast_cast_cast_cast_cast_cast_reg_291;

assign p_hist_0_address0 = zext_ln75_fu_200_p1;

assign select_ln81_fu_262_p3 = ((cmp_i[0:0] == 1'b1) ? trunc_ln81_fu_254_p1 : trunc_ln81_1_fu_258_p1);

assign sh_prom4_i183_cast_cast_cast_cast_cast_cast_fu_164_p1 = $unsigned(sh_prom4_i183_cast_cast_cast_cast_cast_fu_160_p1);

assign sh_prom4_i183_cast_cast_cast_cast_cast_fu_160_p1 = $signed(sh_prom4_i183_cast_cast_cast_cast);

assign sh_prom4_i_cast_cast_cast_cast_cast_cast_fu_144_p1 = $unsigned(sh_prom4_i_cast_cast_cast_cast_cast_fu_140_p1);

assign sh_prom4_i_cast_cast_cast_cast_cast_fu_140_p1 = $signed(sh_prom4_i_cast_cast_cast_cast);

assign sh_prom_i177_cast_cast_cast_cast_cast_cast_fu_172_p1 = $unsigned(sh_prom_i177_cast_cast_cast_cast_cast_fu_168_p1);

assign sh_prom_i177_cast_cast_cast_cast_cast_fu_168_p1 = $signed(sh_prom_i177_cast_cast_cast_cast);

assign sh_prom_i_cast_cast_cast_cast_cast_cast_fu_152_p1 = $unsigned(sh_prom_i_cast_cast_cast_cast_cast_fu_148_p1);

assign sh_prom_i_cast_cast_cast_cast_cast_fu_148_p1 = $signed(sh_prom_i_cast_cast_cast_cast);

assign shl_ln80_fu_222_p2 = zext_ln80_1_fu_214_p1 << sh_prom4_i183_cast_cast_cast_cast_cast_cast_reg_301;

assign shl_ln81_fu_250_p2 = mul_ln81_reg_355 << sh_prom4_i_cast_cast_cast_cast_cast_cast_reg_286;

assign tmp2_fu_235_p3 = ((cmp_i174[0:0] == 1'b1) ? trunc_ln80_fu_227_p1 : trunc_ln80_1_fu_231_p1);

assign trunc_ln80_1_fu_231_p1 = shl_ln80_fu_222_p2[44:0];

assign trunc_ln80_fu_227_p1 = lshr_ln80_fu_217_p2[44:0];

assign trunc_ln81_1_fu_258_p1 = shl_ln81_fu_250_p2[32:0];

assign trunc_ln81_fu_254_p1 = lshr_ln81_fu_246_p2[32:0];

assign wdt_1_cast_cast_fu_176_p1 = wdt_1_cast;

assign zext_ln75_fu_200_p1 = ap_sig_allocacmp_i_3;

assign zext_ln80_1_fu_214_p1 = mul_ln80_reg_340;

assign zext_ln80_fu_210_p1 = p_hist_0_load_reg_330;

always @ (posedge ap_clk) begin
    sh_prom4_i_cast_cast_cast_cast_cast_cast_reg_286[76:32] <= 45'b000000000000000000000000000000000000000000000;
    sh_prom_i_cast_cast_cast_cast_cast_cast_reg_291[76:32] <= 45'b000000000000000000000000000000000000000000000;
    conv3_i12_i_i156_cast_reg_296[76:32] <= 45'b000000000000000000000000000000000000000000000;
    sh_prom4_i183_cast_cast_cast_cast_cast_cast_reg_301[76:32] <= 45'b000000000000000000000000000000000000000000000;
    sh_prom_i177_cast_cast_cast_cast_cast_cast_reg_306[76:32] <= 45'b000000000000000000000000000000000000000000000;
    wdt_1_cast_cast_reg_311[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln75_reg_320[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter8_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter9_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln75_reg_320_pp0_iter10_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Otsu_xfOtsuKernel_Pipeline_HISTOGRAM_NORM_LOOP
