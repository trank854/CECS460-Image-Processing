// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Otsu_xfOtsuKernel_Pipeline_THRESHOLD_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        HistArray_address0,
        HistArray_ce0,
        HistArray_q0,
        total,
        zext_ln104,
        sh_prom_cast_cast_cast_cast,
        conv106,
        sh_prom122_cast_cast_cast_cast,
        sext_ln100,
        max_val_2_out,
        max_val_2_out_ap_vld,
        grp_Inverse_fu_83_p_din1,
        grp_Inverse_fu_83_p_din2,
        grp_Inverse_fu_83_p_dout0_0,
        grp_Inverse_fu_83_p_dout0_1,
        grp_Inverse_fu_83_p_ce,
        grp_Inverse_fu_83_p_start,
        grp_Inverse_fu_83_p_ready,
        grp_Inverse_fu_83_p_done,
        grp_Inverse_fu_83_p_idle,
        grp_fu_654_p_din0,
        grp_fu_654_p_din1,
        grp_fu_654_p_dout0,
        grp_fu_654_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] HistArray_address0;
output   HistArray_ce0;
input  [32:0] HistArray_q0;
input  [24:0] total;
input  [24:0] zext_ln104;
input  [7:0] sh_prom_cast_cast_cast_cast;
input  [31:0] conv106;
input  [8:0] sh_prom122_cast_cast_cast_cast;
input  [7:0] sext_ln100;
output  [7:0] max_val_2_out;
output   max_val_2_out_ap_vld;
output  [15:0] grp_Inverse_fu_83_p_din1;
output  [4:0] grp_Inverse_fu_83_p_din2;
input  [31:0] grp_Inverse_fu_83_p_dout0_0;
input  [7:0] grp_Inverse_fu_83_p_dout0_1;
output   grp_Inverse_fu_83_p_ce;
output   grp_Inverse_fu_83_p_start;
input   grp_Inverse_fu_83_p_ready;
input   grp_Inverse_fu_83_p_done;
input   grp_Inverse_fu_83_p_idle;
output  [31:0] grp_fu_654_p_din0;
output  [31:0] grp_fu_654_p_din1;
input  [63:0] grp_fu_654_p_dout0;
output   grp_fu_654_p_ce;

reg ap_idle;
reg HistArray_ce0;
reg[7:0] max_val_2_out;
reg max_val_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_subdone;
wire   [0:0] icmp_ln98_fu_286_p2;
wire   [0:0] icmp_ln99_fu_295_p2;
reg   [0:0] icmp_ln92_reg_570;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_179;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln98_reg_603;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln98_reg_603_pp0_iter5_reg;
reg   [31:0] reg_183;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln98_reg_603_pp0_iter6_reg;
wire  signed [31:0] sext_ln100_cast_fu_187_p1;
reg  signed [31:0] sext_ln100_cast_reg_538;
wire   [63:0] sh_prom122_cast_cast_cast_cast_cast_cast_fu_195_p1;
reg   [63:0] sh_prom122_cast_cast_cast_cast_cast_cast_reg_543;
wire   [63:0] conv106_cast_fu_199_p1;
reg   [63:0] conv106_cast_reg_548;
wire   [63:0] sh_prom_cast_cast_cast_cast_cast_cast_fu_207_p1;
reg   [63:0] sh_prom_cast_cast_cast_cast_cast_cast_reg_553;
wire   [63:0] zext_ln104_cast_fu_211_p1;
reg   [63:0] zext_ln104_cast_reg_559;
reg   [8:0] i_1_reg_564;
wire   [0:0] icmp_ln92_fu_243_p2;
reg   [0:0] icmp_ln92_reg_570_pp0_iter1_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter2_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter3_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter4_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter5_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter6_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter7_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter8_reg;
reg   [0:0] icmp_ln92_reg_570_pp0_iter9_reg;
reg   [32:0] HistArray_load_reg_579;
wire   [31:0] wB_1_fu_269_p2;
reg   [31:0] wB_1_reg_584;
wire   [24:0] add_ln98_fu_275_p2;
reg   [24:0] add_ln98_reg_592;
reg   [24:0] add_ln98_reg_592_pp0_iter1_reg;
reg   [24:0] add_ln98_reg_592_pp0_iter2_reg;
reg   [24:0] add_ln98_reg_592_pp0_iter3_reg;
reg   [24:0] add_ln98_reg_592_pp0_iter4_reg;
wire   [8:0] i_2_fu_281_p2;
reg   [8:0] i_2_reg_598;
reg   [0:0] icmp_ln98_reg_603_pp0_iter1_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter2_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter3_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter4_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter7_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter8_reg;
reg   [0:0] icmp_ln98_reg_603_pp0_iter9_reg;
reg   [0:0] icmp_ln99_reg_607;
reg   [0:0] icmp_ln99_reg_607_pp0_iter1_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter2_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter3_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter4_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter5_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter6_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter7_reg;
reg   [0:0] icmp_ln99_reg_607_pp0_iter8_reg;
wire   [7:0] trunc_ln101_fu_305_p1;
reg   [7:0] trunc_ln101_reg_616;
reg   [7:0] trunc_ln101_reg_616_pp0_iter1_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter2_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter3_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter4_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter5_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter6_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter7_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter8_reg;
reg   [7:0] trunc_ln101_reg_616_pp0_iter9_reg;
wire   [40:0] grp_fu_159_p2;
reg   [40:0] mul_ln101_reg_626;
wire   [63:0] zext_ln106_fu_313_p1;
wire  signed [63:0] sumB_1_fu_331_p2;
reg  signed [63:0] sumB_1_reg_636;
wire   [63:0] c1_fu_342_p2;
reg   [63:0] c1_reg_641;
reg   [63:0] c1_reg_641_pp0_iter2_reg;
wire   [63:0] grp_fu_163_p2;
reg   [63:0] mul_ln104_reg_646;
wire   [63:0] a1_fu_347_p2;
reg   [63:0] a1_reg_651;
wire   [63:0] d_fu_351_p2;
reg   [63:0] d_reg_656;
reg   [0:0] tmp_reg_662;
wire  signed [63:0] d_1_fu_368_p3;
reg  signed [63:0] d_1_reg_667;
reg   [15:0] x_inv2_reg_673;
reg   [15:0] x_inv2_reg_673_pp0_iter6_reg;
wire   [63:0] grp_fu_171_p2;
reg   [63:0] mul_ln110_reg_678;
wire   [31:0] res_fu_402_p1;
reg   [31:0] res_reg_683;
reg   [7:0] call_ret8_reg_688_1;
wire   [63:0] zext_ln119_fu_406_p1;
wire   [63:0] zext_ln119_1_fu_410_p1;
wire  signed [63:0] maxtmp_fu_426_p2;
reg  signed [63:0] maxtmp_reg_703;
reg   [7:0] call_ret_reg_708_1;
reg   [7:0] call_ret_reg_708_pp0_iter8_reg_1;
reg   [7:0] call_ret_reg_708_pp0_iter9_reg_1;
wire   [63:0] grp_fu_167_p2;
reg   [63:0] mul_ln120_reg_718;
wire   [63:0] max_fu_448_p2;
reg   [63:0] max_reg_723;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_Inverse_fu_146_ap_ready;
reg   [15:0] grp_Inverse_fu_146_x;
reg    grp_Inverse_fu_146_ap_start_reg;
reg    ap_predicate_op114_call_state16_state15;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln92_fu_249_p1;
reg   [31:0] wB_fu_70;
wire    ap_loop_init;
reg   [8:0] i_fu_74;
reg   [8:0] ap_sig_allocacmp_i_1;
reg   [63:0] sumB_fu_78;
reg   [63:0] varMax_fu_82;
wire   [63:0] varMax_1_fu_464_p3;
reg   [7:0] max_val_1_fu_86;
wire   [7:0] max_val_fu_471_p3;
reg   [7:0] ap_sig_allocacmp_max_val_1_load_1;
reg   [7:0] ap_sig_allocacmp_max_val_1_load;
wire    ap_block_pp0_stage2_01001;
reg   [31:0] grp_fu_155_p0;
reg   [31:0] grp_fu_155_p1;
wire   [32:0] grp_fu_159_p0;
wire   [7:0] grp_fu_159_p1;
wire   [24:0] grp_fu_163_p1;
wire   [31:0] grp_fu_167_p1;
wire  signed [31:0] sh_prom122_cast_cast_cast_cast_cast_fu_191_p1;
wire  signed [31:0] sh_prom_cast_cast_cast_cast_cast_fu_203_p1;
wire   [31:0] trunc_ln97_fu_257_p1;
wire   [24:0] trunc_ln97_2_fu_265_p1;
wire   [24:0] trunc_ln97_1_fu_261_p1;
wire   [31:0] lshr_ln99_fu_291_p2;
wire   [63:0] zext_ln101_1_fu_328_p1;
wire   [63:0] sub_ln108_fu_363_p2;
wire   [24:0] wF_fu_374_p2;
wire   [63:0] lshr_ln110_fu_398_p2;
wire  signed [31:0] sext_ln119_fu_418_p1;
wire   [63:0] zext_ln119_2_fu_422_p1;
wire  signed [31:0] sext_ln120_fu_440_p1;
wire   [63:0] zext_ln120_1_fu_444_p1;
wire   [0:0] icmp_ln122_fu_459_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [40:0] grp_fu_159_p00;
wire   [40:0] grp_fu_159_p10;
wire   [63:0] grp_fu_167_p10;
reg    ap_condition_519;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_Inverse_fu_146_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Otsu_mul_33ns_8ns_41_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 41 ))
mul_33ns_8ns_41_2_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_159_p0),
    .din1(grp_fu_159_p1),
    .ce(1'b1),
    .dout(grp_fu_159_p2)
);

Otsu_mul_64s_25ns_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 64 ))
mul_64s_25ns_64_5_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sumB_1_reg_636),
    .din1(grp_fu_163_p1),
    .ce(1'b1),
    .dout(grp_fu_163_p2)
);

Otsu_mul_64s_32ns_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32ns_64_5_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(maxtmp_reg_703),
    .din1(grp_fu_167_p1),
    .ce(1'b1),
    .dout(grp_fu_167_p2)
);

Otsu_mul_64s_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_64s_64s_64_5_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d_1_reg_667),
    .din1(d_1_reg_667),
    .ce(1'b1),
    .dout(grp_fu_171_p2)
);

Otsu_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Inverse_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op114_call_state16_state15 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            grp_Inverse_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_Inverse_fu_146_ap_ready == 1'b1)) begin
            grp_Inverse_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_74 <= 9'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i_fu_74 <= i_2_reg_598;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        max_val_1_fu_86 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln98_reg_603_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        max_val_1_fu_86 <= max_val_fu_471_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sumB_fu_78 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603 == 1'd0))) begin
        sumB_fu_78 <= sumB_1_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        varMax_fu_82 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln98_reg_603_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        varMax_fu_82 <= varMax_1_fu_464_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            wB_fu_70 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            wB_fu_70 <= wB_1_reg_584;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_570 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        HistArray_load_reg_579 <= HistArray_q0;
        add_ln98_reg_592 <= add_ln98_fu_275_p2;
        wB_1_reg_584 <= wB_1_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln98_reg_603_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a1_reg_651 <= a1_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln98_reg_592_pp0_iter1_reg <= add_ln98_reg_592;
        add_ln98_reg_592_pp0_iter2_reg <= add_ln98_reg_592_pp0_iter1_reg;
        add_ln98_reg_592_pp0_iter3_reg <= add_ln98_reg_592_pp0_iter2_reg;
        add_ln98_reg_592_pp0_iter4_reg <= add_ln98_reg_592_pp0_iter3_reg;
        call_ret_reg_708_pp0_iter8_reg_1 <= call_ret_reg_708_1;
        call_ret_reg_708_pp0_iter9_reg_1 <= call_ret_reg_708_pp0_iter8_reg_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        c1_reg_641_pp0_iter2_reg <= c1_reg_641;
        i_2_reg_598 <= i_2_fu_281_p2;
        icmp_ln98_reg_603_pp0_iter1_reg <= icmp_ln98_reg_603;
        icmp_ln98_reg_603_pp0_iter2_reg <= icmp_ln98_reg_603_pp0_iter1_reg;
        icmp_ln98_reg_603_pp0_iter3_reg <= icmp_ln98_reg_603_pp0_iter2_reg;
        icmp_ln98_reg_603_pp0_iter4_reg <= icmp_ln98_reg_603_pp0_iter3_reg;
        icmp_ln98_reg_603_pp0_iter5_reg <= icmp_ln98_reg_603_pp0_iter4_reg;
        icmp_ln98_reg_603_pp0_iter6_reg <= icmp_ln98_reg_603_pp0_iter5_reg;
        icmp_ln98_reg_603_pp0_iter7_reg <= icmp_ln98_reg_603_pp0_iter6_reg;
        icmp_ln98_reg_603_pp0_iter8_reg <= icmp_ln98_reg_603_pp0_iter7_reg;
        icmp_ln98_reg_603_pp0_iter9_reg <= icmp_ln98_reg_603_pp0_iter8_reg;
        icmp_ln99_reg_607_pp0_iter1_reg <= icmp_ln99_reg_607;
        icmp_ln99_reg_607_pp0_iter2_reg <= icmp_ln99_reg_607_pp0_iter1_reg;
        icmp_ln99_reg_607_pp0_iter3_reg <= icmp_ln99_reg_607_pp0_iter2_reg;
        icmp_ln99_reg_607_pp0_iter4_reg <= icmp_ln99_reg_607_pp0_iter3_reg;
        icmp_ln99_reg_607_pp0_iter5_reg <= icmp_ln99_reg_607_pp0_iter4_reg;
        icmp_ln99_reg_607_pp0_iter6_reg <= icmp_ln99_reg_607_pp0_iter5_reg;
        icmp_ln99_reg_607_pp0_iter7_reg <= icmp_ln99_reg_607_pp0_iter6_reg;
        icmp_ln99_reg_607_pp0_iter8_reg <= icmp_ln99_reg_607_pp0_iter7_reg;
        trunc_ln101_reg_616_pp0_iter1_reg <= trunc_ln101_reg_616;
        trunc_ln101_reg_616_pp0_iter2_reg <= trunc_ln101_reg_616_pp0_iter1_reg;
        trunc_ln101_reg_616_pp0_iter3_reg <= trunc_ln101_reg_616_pp0_iter2_reg;
        trunc_ln101_reg_616_pp0_iter4_reg <= trunc_ln101_reg_616_pp0_iter3_reg;
        trunc_ln101_reg_616_pp0_iter5_reg <= trunc_ln101_reg_616_pp0_iter4_reg;
        trunc_ln101_reg_616_pp0_iter6_reg <= trunc_ln101_reg_616_pp0_iter5_reg;
        trunc_ln101_reg_616_pp0_iter7_reg <= trunc_ln101_reg_616_pp0_iter6_reg;
        trunc_ln101_reg_616_pp0_iter8_reg <= trunc_ln101_reg_616_pp0_iter7_reg;
        trunc_ln101_reg_616_pp0_iter9_reg <= trunc_ln101_reg_616_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln98_reg_603 == 1'd0))) begin
        c1_reg_641 <= c1_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln99_reg_607_pp0_iter5_reg == 1'd0) & (icmp_ln92_reg_570_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0))) begin
        call_ret8_reg_688_1 <= grp_Inverse_fu_83_p_dout0_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603_pp0_iter6_reg == 1'd0))) begin
        call_ret_reg_708_1 <= grp_Inverse_fu_83_p_dout0_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv106_cast_reg_548[31 : 0] <= conv106_cast_fu_199_p1[31 : 0];
        i_1_reg_564 <= ap_sig_allocacmp_i_1;
        icmp_ln92_reg_570 <= icmp_ln92_fu_243_p2;
        icmp_ln92_reg_570_pp0_iter1_reg <= icmp_ln92_reg_570;
        icmp_ln92_reg_570_pp0_iter2_reg <= icmp_ln92_reg_570_pp0_iter1_reg;
        icmp_ln92_reg_570_pp0_iter3_reg <= icmp_ln92_reg_570_pp0_iter2_reg;
        icmp_ln92_reg_570_pp0_iter4_reg <= icmp_ln92_reg_570_pp0_iter3_reg;
        icmp_ln92_reg_570_pp0_iter5_reg <= icmp_ln92_reg_570_pp0_iter4_reg;
        icmp_ln92_reg_570_pp0_iter6_reg <= icmp_ln92_reg_570_pp0_iter5_reg;
        icmp_ln92_reg_570_pp0_iter7_reg <= icmp_ln92_reg_570_pp0_iter6_reg;
        icmp_ln92_reg_570_pp0_iter8_reg <= icmp_ln92_reg_570_pp0_iter7_reg;
        icmp_ln92_reg_570_pp0_iter9_reg <= icmp_ln92_reg_570_pp0_iter8_reg;
        sext_ln100_cast_reg_538 <= sext_ln100_cast_fu_187_p1;
        sh_prom122_cast_cast_cast_cast_cast_cast_reg_543[31 : 0] <= sh_prom122_cast_cast_cast_cast_cast_cast_fu_195_p1[31 : 0];
        sh_prom_cast_cast_cast_cast_cast_cast_reg_553[31 : 0] <= sh_prom_cast_cast_cast_cast_cast_cast_fu_207_p1[31 : 0];
        x_inv2_reg_673_pp0_iter6_reg <= x_inv2_reg_673;
        zext_ln104_cast_reg_559[24 : 0] <= zext_ln104_cast_fu_211_p1[24 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln98_reg_603_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_1_reg_667 <= d_1_fu_368_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln98_reg_603_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d_reg_656 <= d_fu_351_p2;
        tmp_reg_662 <= d_fu_351_p2[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_570 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln98_reg_603 <= icmp_ln98_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_570 == 1'd0) & (icmp_ln98_fu_286_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln99_reg_607 <= icmp_ln99_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln98_reg_603_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        max_reg_723 <= max_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603_pp0_iter6_reg == 1'd0))) begin
        maxtmp_reg_703 <= maxtmp_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603 == 1'd0))) begin
        mul_ln101_reg_626 <= grp_fu_159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln98_reg_603_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln104_reg_646 <= grp_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln98_reg_603_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln110_reg_678 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln98_reg_603_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln120_reg_718 <= grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603 == 1'd0)))) begin
        reg_179 <= grp_fu_654_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603_pp0_iter6_reg == 1'd0)))) begin
        reg_183 <= grp_Inverse_fu_83_p_dout0_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0))) begin
        res_reg_683 <= res_fu_402_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603 == 1'd0))) begin
        sumB_1_reg_636 <= sumB_1_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_570 == 1'd0) & (icmp_ln99_fu_295_p2 == 1'd0) & (icmp_ln98_fu_286_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln101_reg_616 <= trunc_ln101_fu_305_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln98_reg_603_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_inv2_reg_673 <= {{wF_fu_374_p2[24:9]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        HistArray_ce0 = 1'b1;
    end else begin
        HistArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((icmp_ln92_reg_570 == 1'd1) | ((icmp_ln99_fu_295_p2 == 1'd1) & (icmp_ln98_fu_286_p2 == 1'd0))))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_i_1 = 9'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_i_1 = i_2_reg_598;
        end else begin
            ap_sig_allocacmp_i_1 = i_fu_74;
        end
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln98_reg_603_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_max_val_1_load = max_val_fu_471_p3;
    end else begin
        ap_sig_allocacmp_max_val_1_load = max_val_1_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln98_reg_603_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_max_val_1_load_1 = max_val_fu_471_p3;
    end else begin
        ap_sig_allocacmp_max_val_1_load_1 = max_val_1_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln98_reg_603_pp0_iter5_reg == 1'd0))) begin
        grp_Inverse_fu_146_x = x_inv2_reg_673_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln99_reg_607_pp0_iter4_reg == 1'd0) & (icmp_ln98_reg_603_pp0_iter4_reg == 1'd0) & (icmp_ln92_reg_570_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_Inverse_fu_146_x = {{add_ln98_reg_592_pp0_iter4_reg[24:9]}};
    end else begin
        grp_Inverse_fu_146_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_155_p0 = zext_ln119_1_fu_410_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_p0 = zext_ln106_fu_313_p1;
    end else begin
        grp_fu_155_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_155_p1 = zext_ln119_fu_406_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_p1 = conv106_cast_reg_548;
    end else begin
        grp_fu_155_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        if ((icmp_ln92_reg_570_pp0_iter9_reg == 1'd1)) begin
            max_val_2_out = ap_sig_allocacmp_max_val_1_load;
        end else if ((1'b1 == ap_condition_519)) begin
            max_val_2_out = ap_sig_allocacmp_max_val_1_load_1;
        end else begin
            max_val_2_out = 'bx;
        end
    end else begin
        max_val_2_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln92_reg_570_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln99_reg_607_pp0_iter8_reg == 1'd1) & (icmp_ln98_reg_603_pp0_iter8_reg == 1'd0) & (icmp_ln92_reg_570_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        max_val_2_out_ap_vld = 1'b1;
    end else begin
        max_val_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HistArray_address0 = zext_ln92_fu_249_p1;

assign a1_fu_347_p2 = mul_ln104_reg_646 >> sh_prom_cast_cast_cast_cast_cast_cast_reg_553;

assign add_ln98_fu_275_p2 = (trunc_ln97_2_fu_265_p1 + trunc_ln97_1_fu_261_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_519 = ((icmp_ln99_reg_607_pp0_iter8_reg == 1'd1) & (icmp_ln98_reg_603_pp0_iter8_reg == 1'd0) & (icmp_ln92_reg_570_pp0_iter9_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

always @ (*) begin
    ap_predicate_op114_call_state16_state15 = ((icmp_ln99_reg_607_pp0_iter3_reg == 1'd0) & (icmp_ln98_reg_603_pp0_iter3_reg == 1'd0) & (icmp_ln92_reg_570_pp0_iter4_reg == 1'd0));
end

assign c1_fu_342_p2 = reg_179 >> sh_prom_cast_cast_cast_cast_cast_cast_reg_553;

assign conv106_cast_fu_199_p1 = conv106;

assign d_1_fu_368_p3 = ((tmp_reg_662[0:0] == 1'b1) ? sub_ln108_fu_363_p2 : d_reg_656);

assign d_fu_351_p2 = (a1_reg_651 - c1_reg_641_pp0_iter2_reg);

assign grp_Inverse_fu_146_ap_ready = grp_Inverse_fu_83_p_ready;

assign grp_Inverse_fu_83_p_ce = 1'b1;

assign grp_Inverse_fu_83_p_din1 = grp_Inverse_fu_146_x;

assign grp_Inverse_fu_83_p_din2 = 5'd0;

assign grp_Inverse_fu_83_p_start = grp_Inverse_fu_146_ap_start_reg;

assign grp_fu_159_p0 = grp_fu_159_p00;

assign grp_fu_159_p00 = HistArray_load_reg_579;

assign grp_fu_159_p1 = grp_fu_159_p10;

assign grp_fu_159_p10 = trunc_ln101_fu_305_p1;

assign grp_fu_163_p1 = zext_ln104_cast_reg_559;

assign grp_fu_167_p1 = grp_fu_167_p10;

assign grp_fu_167_p10 = reg_183;

assign grp_fu_654_p_ce = 1'b1;

assign grp_fu_654_p_din0 = grp_fu_155_p0;

assign grp_fu_654_p_din1 = grp_fu_155_p1;

assign i_2_fu_281_p2 = (i_1_reg_564 + 9'd1);

assign icmp_ln122_fu_459_p2 = ((max_reg_723 > varMax_fu_82) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_243_p2 = ((ap_sig_allocacmp_i_1 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_286_p2 = ((wB_1_reg_584 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_295_p2 = ((lshr_ln99_fu_291_p2 == 32'd1) ? 1'b1 : 1'b0);

assign lshr_ln110_fu_398_p2 = mul_ln110_reg_678 >> sh_prom122_cast_cast_cast_cast_cast_cast_reg_543;

assign lshr_ln99_fu_291_p2 = wB_1_reg_584 >> sext_ln100_cast_reg_538;

assign max_fu_448_p2 = mul_ln120_reg_718 >> zext_ln120_1_fu_444_p1;

assign max_val_fu_471_p3 = ((icmp_ln122_fu_459_p2[0:0] == 1'b1) ? trunc_ln101_reg_616_pp0_iter9_reg : max_val_1_fu_86);

assign maxtmp_fu_426_p2 = reg_179 >> zext_ln119_2_fu_422_p1;

assign res_fu_402_p1 = lshr_ln110_fu_398_p2[31:0];

assign sext_ln100_cast_fu_187_p1 = $signed(sext_ln100);

assign sext_ln119_fu_418_p1 = $signed(call_ret8_reg_688_1);

assign sext_ln120_fu_440_p1 = $signed(call_ret_reg_708_pp0_iter9_reg_1);

assign sh_prom122_cast_cast_cast_cast_cast_cast_fu_195_p1 = $unsigned(sh_prom122_cast_cast_cast_cast_cast_fu_191_p1);

assign sh_prom122_cast_cast_cast_cast_cast_fu_191_p1 = $signed(sh_prom122_cast_cast_cast_cast);

assign sh_prom_cast_cast_cast_cast_cast_cast_fu_207_p1 = $unsigned(sh_prom_cast_cast_cast_cast_cast_fu_203_p1);

assign sh_prom_cast_cast_cast_cast_cast_fu_203_p1 = $signed(sh_prom_cast_cast_cast_cast);

assign sub_ln108_fu_363_p2 = (64'd0 - d_reg_656);

assign sumB_1_fu_331_p2 = (sumB_fu_78 + zext_ln101_1_fu_328_p1);

assign trunc_ln101_fu_305_p1 = i_1_reg_564[7:0];

assign trunc_ln97_1_fu_261_p1 = wB_fu_70[24:0];

assign trunc_ln97_2_fu_265_p1 = HistArray_q0[24:0];

assign trunc_ln97_fu_257_p1 = HistArray_q0[31:0];

assign varMax_1_fu_464_p3 = ((icmp_ln122_fu_459_p2[0:0] == 1'b1) ? max_reg_723 : varMax_fu_82);

assign wB_1_fu_269_p2 = (trunc_ln97_fu_257_p1 + wB_fu_70);

assign wF_fu_374_p2 = (total - add_ln98_reg_592_pp0_iter4_reg);

assign zext_ln101_1_fu_328_p1 = mul_ln101_reg_626;

assign zext_ln104_cast_fu_211_p1 = zext_ln104;

assign zext_ln106_fu_313_p1 = wB_1_reg_584;

assign zext_ln119_1_fu_410_p1 = reg_183;

assign zext_ln119_2_fu_422_p1 = $unsigned(sext_ln119_fu_418_p1);

assign zext_ln119_fu_406_p1 = res_reg_683;

assign zext_ln120_1_fu_444_p1 = $unsigned(sext_ln120_fu_440_p1);

assign zext_ln92_fu_249_p1 = ap_sig_allocacmp_i_1;

always @ (posedge ap_clk) begin
    sh_prom122_cast_cast_cast_cast_cast_cast_reg_543[63:32] <= 32'b00000000000000000000000000000000;
    conv106_cast_reg_548[63:32] <= 32'b00000000000000000000000000000000;
    sh_prom_cast_cast_cast_cast_cast_cast_reg_553[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln104_cast_reg_559[63:25] <= 39'b000000000000000000000000000000000000000;
end

endmodule //Otsu_xfOtsuKernel_Pipeline_THRESHOLD_LOOP
