// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module QuantizationDithering_xf_QuatizationDithering_Pipeline_LOOP_ROW_LOOP_COL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img0_data_dout,
        img0_data_num_data_valid,
        img0_data_fifo_cap,
        img0_data_empty_n,
        img0_data_read,
        img1_data_din,
        img1_data_num_data_valid,
        img1_data_fifo_cap,
        img1_data_full_n,
        img1_data_write,
        mul_ln177,
        offset_buffer_2_address0,
        offset_buffer_2_ce0,
        offset_buffer_2_we0,
        offset_buffer_2_d0,
        offset_buffer_2_address1,
        offset_buffer_2_ce1,
        offset_buffer_2_q1,
        offset_buffer_1_address0,
        offset_buffer_1_ce0,
        offset_buffer_1_we0,
        offset_buffer_1_d0,
        offset_buffer_1_address1,
        offset_buffer_1_ce1,
        offset_buffer_1_q1,
        width,
        offset_buffer_address0,
        offset_buffer_ce0,
        offset_buffer_we0,
        offset_buffer_d0,
        offset_buffer_address1,
        offset_buffer_ce1,
        offset_buffer_q1,
        add_ln177,
        zext_ln109
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img0_data_dout;
input  [1:0] img0_data_num_data_valid;
input  [1:0] img0_data_fifo_cap;
input   img0_data_empty_n;
output   img0_data_read;
output  [23:0] img1_data_din;
input  [1:0] img1_data_num_data_valid;
input  [1:0] img1_data_fifo_cap;
input   img1_data_full_n;
output   img1_data_write;
input  [20:0] mul_ln177;
output  [10:0] offset_buffer_2_address0;
output   offset_buffer_2_ce0;
output   offset_buffer_2_we0;
output  [6:0] offset_buffer_2_d0;
output  [10:0] offset_buffer_2_address1;
output   offset_buffer_2_ce1;
input  [6:0] offset_buffer_2_q1;
output  [10:0] offset_buffer_1_address0;
output   offset_buffer_1_ce0;
output   offset_buffer_1_we0;
output  [6:0] offset_buffer_1_d0;
output  [10:0] offset_buffer_1_address1;
output   offset_buffer_1_ce1;
input  [6:0] offset_buffer_1_q1;
input  [10:0] width;
output  [10:0] offset_buffer_address0;
output   offset_buffer_ce0;
output   offset_buffer_we0;
output  [6:0] offset_buffer_d0;
output  [10:0] offset_buffer_address1;
output   offset_buffer_ce1;
input  [6:0] offset_buffer_q1;
input  [11:0] add_ln177;
input  [10:0] zext_ln109;

reg ap_idle;
reg img0_data_read;
reg img1_data_write;
reg offset_buffer_2_ce0;
reg offset_buffer_2_we0;
reg offset_buffer_2_ce1;
reg offset_buffer_1_ce0;
reg offset_buffer_1_we0;
reg offset_buffer_1_ce1;
reg offset_buffer_ce0;
reg offset_buffer_we0;
reg offset_buffer_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln177_reg_1499;
reg   [0:0] icmp_ln191_reg_1508;
reg    ap_predicate_op64_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln191_reg_1508_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln177_fu_340_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img1_data_blk_n;
wire    ap_block_pp0_stage0;
reg    img0_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] zext_ln109_cast_fu_293_p1;
reg   [11:0] zext_ln109_cast_reg_1494;
wire   [10:0] trunc_ln191_fu_374_p1;
reg   [10:0] trunc_ln191_reg_1503;
reg   [10:0] trunc_ln191_reg_1503_pp0_iter2_reg;
reg   [10:0] trunc_ln191_reg_1503_pp0_iter3_reg;
wire   [0:0] icmp_ln191_fu_378_p2;
reg   [0:0] icmp_ln191_reg_1508_pp0_iter2_reg;
wire   [0:0] cmp221_fu_383_p2;
reg   [0:0] cmp221_reg_1512;
reg   [0:0] cmp221_reg_1512_pp0_iter2_reg;
reg   [0:0] cmp221_reg_1512_pp0_iter3_reg;
wire   [0:0] cmp239_fu_389_p2;
reg   [0:0] cmp239_reg_1516;
reg   [0:0] cmp239_reg_1516_pp0_iter2_reg;
reg   [0:0] cmp239_reg_1516_pp0_iter3_reg;
reg  signed [6:0] offset_buffer_load_reg_1549;
wire   [1:0] trunc_ln213_2_fu_410_p1;
reg   [1:0] trunc_ln213_2_reg_1554;
reg  signed [6:0] offset_buffer_1_load_reg_1559;
wire   [1:0] trunc_ln213_5_fu_414_p1;
reg   [1:0] trunc_ln213_5_reg_1564;
reg  signed [6:0] offset_buffer_2_load_reg_1569;
wire   [1:0] trunc_ln213_8_fu_418_p1;
reg   [1:0] trunc_ln213_8_reg_1574;
reg  signed [2:0] p_load82_reg_1579;
reg  signed [2:0] conv_i5868_load_reg_1584;
reg   [7:0] tmp1_reg_1590;
wire   [0:0] tmp_2_fu_522_p3;
reg   [0:0] tmp_2_reg_1595;
reg   [0:0] tmp_3_reg_1600;
reg   [6:0] tmp_6_reg_1606;
wire   [1:0] trunc_ln220_fu_548_p1;
reg   [1:0] trunc_ln220_reg_1611;
wire  signed [2:0] q_err_3rd_local_fu_552_p3;
reg  signed [2:0] q_err_3rd_local_reg_1616;
reg  signed [2:0] p_load81_reg_1621;
reg  signed [2:0] conv_i58_170_load_reg_1626;
reg   [7:0] tmp_1_reg_1632;
wire   [0:0] tmp_9_fu_689_p3;
reg   [0:0] tmp_9_reg_1637;
reg   [0:0] tmp_11_reg_1642;
reg   [6:0] tmp_s_reg_1648;
wire   [1:0] trunc_ln220_1_fu_715_p1;
reg   [1:0] trunc_ln220_1_reg_1653;
wire  signed [2:0] q_err_3rd_local_1_fu_719_p3;
reg  signed [2:0] q_err_3rd_local_1_reg_1658;
reg  signed [2:0] p_load_reg_1663;
reg  signed [2:0] conv_i58_272_load_reg_1668;
reg   [7:0] tmp_10_reg_1674;
wire   [0:0] tmp_18_fu_856_p3;
reg   [0:0] tmp_18_reg_1679;
reg   [0:0] tmp_19_reg_1684;
reg   [6:0] tmp_12_reg_1690;
wire   [1:0] trunc_ln220_2_fu_882_p1;
reg   [1:0] trunc_ln220_2_reg_1695;
wire  signed [2:0] q_err_3rd_local_2_fu_886_p3;
reg  signed [2:0] q_err_3rd_local_2_reg_1700;
wire   [23:0] ap_phi_reg_pp0_iter0_read_word_1_reg_282;
reg   [23:0] ap_phi_reg_pp0_iter1_read_word_1_reg_282;
reg   [23:0] ap_phi_reg_pp0_iter2_read_word_1_reg_282;
reg   [23:0] ap_phi_reg_pp0_iter3_read_word_1_reg_282;
wire   [63:0] zext_ln182_fu_367_p1;
wire   [63:0] idxprom233_fu_946_p1;
reg   [2:0] empty_fu_126;
wire   [2:0] select_ln230_1_fu_576_p3;
wire    ap_loop_init;
reg   [6:0] p_0_0_045228_fu_130;
wire  signed [6:0] sext_ln226_fu_1043_p1;
reg   [2:0] empty_27_fu_134;
wire   [2:0] select_ln230_3_fu_743_p3;
reg   [6:0] p_0_0_0452_132_fu_138;
wire  signed [6:0] sext_ln226_1_fu_1184_p1;
reg   [2:0] empty_28_fu_142;
wire   [2:0] select_ln230_5_fu_904_p3;
reg   [6:0] p_0_0_0452_236_fu_146;
wire  signed [6:0] sext_ln226_2_fu_1325_p1;
reg   [2:0] conv_i5868_fu_150;
wire   [2:0] select_ln230_fu_569_p3;
reg   [2:0] conv_i58_170_fu_154;
wire   [2:0] select_ln230_2_fu_736_p3;
reg   [2:0] conv_i58_272_fu_158;
wire   [2:0] select_ln230_4_fu_897_p3;
reg   [11:0] col_index_1_fu_162;
wire   [11:0] add_ln182_fu_394_p2;
reg   [20:0] indvar_flatten_fu_166;
wire   [20:0] add_ln177_1_fu_345_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln182_fu_354_p2;
wire   [11:0] select_ln177_fu_359_p3;
wire  signed [6:0] trunc_ln213_2_fu_410_p0;
wire  signed [6:0] trunc_ln213_5_fu_414_p0;
wire  signed [6:0] trunc_ln213_8_fu_418_p0;
wire  signed [2:0] sext_ln209_fu_432_p0;
wire  signed [2:0] tmp_fu_436_p1;
wire   [5:0] tmp_fu_436_p3;
wire  signed [9:0] sext_ln209_4_fu_444_p1;
wire  signed [9:0] sext_ln209_fu_432_p1;
wire   [9:0] q_2nd_err_scale7_fu_448_p2;
wire   [7:0] in_pixel_fu_428_p1;
wire   [5:0] q_2nd_err_scale7by16_fu_454_p4;
wire   [9:0] zext_ln213_fu_467_p1;
wire  signed [9:0] sext_ln213_1_fu_471_p1;
wire   [9:0] add_ln213_fu_489_p2;
wire  signed [9:0] sext_ln213_fu_464_p1;
wire   [1:0] trunc_ln213_fu_475_p1;
wire   [1:0] add_ln212_fu_501_p2;
wire   [1:0] trunc_ln213_1_fu_479_p4;
wire   [9:0] quatizer_in_fu_495_p2;
wire   [1:0] add_ln212_1_fu_506_p2;
wire  signed [2:0] sext_ln209_1_fu_593_p0;
wire  signed [2:0] tmp_8_fu_597_p1;
wire   [5:0] tmp_8_fu_597_p3;
wire  signed [9:0] sext_ln209_6_fu_605_p1;
wire  signed [9:0] sext_ln209_1_fu_593_p1;
wire   [9:0] q_2nd_err_scale7_1_fu_609_p2;
wire   [7:0] in_pixel_1_fu_583_p4;
wire   [5:0] q_2nd_err_scale7by16_1_fu_615_p4;
wire   [9:0] zext_ln213_1_fu_628_p1;
wire  signed [9:0] sext_ln213_3_fu_632_p1;
wire   [9:0] add_ln213_2_fu_656_p2;
wire  signed [9:0] sext_ln213_2_fu_625_p1;
wire   [1:0] trunc_ln213_3_fu_636_p4;
wire   [1:0] add_ln212_2_fu_668_p2;
wire   [1:0] trunc_ln213_4_fu_646_p4;
wire   [9:0] quatizer_in_1_fu_662_p2;
wire   [1:0] add_ln212_3_fu_673_p2;
wire  signed [2:0] sext_ln209_2_fu_760_p0;
wire  signed [2:0] tmp_17_fu_764_p1;
wire   [5:0] tmp_17_fu_764_p3;
wire  signed [9:0] sext_ln209_8_fu_772_p1;
wire  signed [9:0] sext_ln209_2_fu_760_p1;
wire   [9:0] q_2nd_err_scale7_2_fu_776_p2;
wire   [7:0] in_pixel_2_fu_750_p4;
wire   [5:0] q_2nd_err_scale7by16_2_fu_782_p4;
wire   [9:0] zext_ln213_2_fu_795_p1;
wire  signed [9:0] sext_ln213_5_fu_799_p1;
wire   [9:0] add_ln213_4_fu_823_p2;
wire  signed [9:0] sext_ln213_4_fu_792_p1;
wire   [1:0] trunc_ln213_6_fu_803_p4;
wire   [1:0] add_ln212_4_fu_835_p2;
wire   [1:0] trunc_ln213_7_fu_813_p4;
wire   [9:0] quatizer_in_2_fu_829_p2;
wire   [1:0] add_ln212_5_fu_840_p2;
wire   [10:0] sub232_fu_941_p2;
wire   [7:0] zext_ln217_fu_956_p1;
wire   [6:0] zext_ln217_1_fu_959_p1;
wire   [4:0] shl_ln1_fu_972_p3;
wire   [4:0] shl_ln225_1_fu_989_p4;
wire  signed [5:0] sext_ln225_3_fu_997_p1;
wire  signed [5:0] sext_ln225_2_fu_986_p1;
wire  signed [5:0] sext_ln225_fu_979_p1;
wire  signed [5:0] sext_ln209_3_fu_953_p1;
wire   [5:0] add_ln225_fu_1007_p2;
wire  signed [5:0] sext_ln225_1_fu_983_p1;
wire   [5:0] sub_ln225_fu_1001_p2;
wire   [5:0] add_ln225_1_fu_1017_p2;
wire  signed [6:0] sext_ln225_5_fu_1023_p1;
wire  signed [6:0] sext_ln225_4_fu_1013_p1;
wire   [6:0] sum_tmp_fu_1027_p2;
wire   [2:0] tmp_4_fu_1033_p4;
wire   [7:0] out_tmp_fu_962_p2;
wire   [0:0] tmp_5_fu_1051_p3;
wire   [6:0] add_ln216_fu_967_p2;
wire   [0:0] or_ln244_fu_1059_p2;
wire   [0:0] tmp_7_fu_1064_p3;
wire   [0:0] or_ln247_fu_1080_p2;
wire   [7:0] select_ln244_fu_1072_p3;
wire   [7:0] zext_ln217_2_fu_1097_p1;
wire   [6:0] zext_ln217_3_fu_1100_p1;
wire   [4:0] shl_ln225_2_fu_1113_p3;
wire   [4:0] shl_ln225_3_fu_1130_p4;
wire  signed [5:0] sext_ln225_8_fu_1138_p1;
wire  signed [5:0] sext_ln225_7_fu_1127_p1;
wire  signed [5:0] sext_ln225_6_fu_1120_p1;
wire  signed [5:0] sext_ln209_5_fu_1094_p1;
wire   [5:0] add_ln225_3_fu_1148_p2;
wire  signed [5:0] sext_ln225_9_fu_1124_p1;
wire   [5:0] sub_ln225_1_fu_1142_p2;
wire   [5:0] add_ln225_4_fu_1158_p2;
wire  signed [6:0] sext_ln225_11_fu_1164_p1;
wire  signed [6:0] sext_ln225_10_fu_1154_p1;
wire   [6:0] sum_tmp_1_fu_1168_p2;
wire   [2:0] tmp_14_fu_1174_p4;
wire   [7:0] out_tmp_2_fu_1103_p2;
wire   [0:0] tmp_15_fu_1192_p3;
wire   [6:0] add_ln216_1_fu_1108_p2;
wire   [0:0] or_ln244_1_fu_1200_p2;
wire   [0:0] tmp_16_fu_1205_p3;
wire   [0:0] or_ln247_1_fu_1221_p2;
wire   [7:0] select_ln244_1_fu_1213_p3;
wire   [7:0] zext_ln217_4_fu_1238_p1;
wire   [6:0] zext_ln217_5_fu_1241_p1;
wire   [4:0] shl_ln225_4_fu_1254_p3;
wire   [4:0] shl_ln225_5_fu_1271_p4;
wire  signed [5:0] sext_ln225_13_fu_1279_p1;
wire  signed [5:0] sext_ln225_12_fu_1268_p1;
wire  signed [5:0] sext_ln225_14_fu_1261_p1;
wire  signed [5:0] sext_ln209_7_fu_1235_p1;
wire   [5:0] add_ln225_6_fu_1289_p2;
wire  signed [5:0] sext_ln225_15_fu_1265_p1;
wire   [5:0] sub_ln225_2_fu_1283_p2;
wire   [5:0] add_ln225_7_fu_1299_p2;
wire  signed [6:0] sext_ln225_17_fu_1305_p1;
wire  signed [6:0] sext_ln225_16_fu_1295_p1;
wire   [6:0] sum_tmp_2_fu_1309_p2;
wire   [2:0] tmp_20_fu_1315_p4;
wire   [7:0] out_tmp_4_fu_1244_p2;
wire   [0:0] tmp_21_fu_1333_p3;
wire   [6:0] add_ln216_2_fu_1249_p2;
wire   [0:0] or_ln244_2_fu_1341_p2;
wire   [0:0] tmp_22_fu_1346_p3;
wire   [0:0] or_ln247_2_fu_1362_p2;
wire   [7:0] select_ln244_2_fu_1354_p3;
wire   [7:0] out_tmp_5_fu_1368_p3;
wire   [7:0] out_tmp_3_fu_1227_p3;
wire   [7:0] out_tmp_1_fu_1086_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_52;
reg    ap_enable_state2_pp0_iter1_stage0;
wire    ap_enable_operation_66;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_180;
reg    ap_enable_state5_pp0_iter4_stage0;
reg    ap_enable_operation_55;
wire    ap_enable_operation_68;
reg    ap_enable_operation_209;
reg    ap_enable_operation_58;
wire    ap_enable_operation_70;
reg    ap_enable_operation_238;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

QuantizationDithering_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln191_reg_1508 == 1'd1) & (icmp_ln177_reg_1499 == 1'd0))) begin
            ap_phi_reg_pp0_iter3_read_word_1_reg_282 <= img0_data_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_read_word_1_reg_282 <= ap_phi_reg_pp0_iter2_read_word_1_reg_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_index_1_fu_162 <= 12'd0;
        end else if (((icmp_ln177_fu_340_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            col_index_1_fu_162 <= add_ln182_fu_394_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_i5868_fu_150 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            conv_i5868_fu_150 <= select_ln230_fu_569_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_i58_170_fu_154 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            conv_i58_170_fu_154 <= select_ln230_2_fu_736_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_i58_272_fu_158 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            conv_i58_272_fu_158 <= select_ln230_4_fu_897_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_27_fu_134 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_27_fu_134 <= select_ln230_3_fu_743_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_28_fu_142 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_28_fu_142 <= select_ln230_5_fu_904_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_126 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_fu_126 <= select_ln230_1_fu_576_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_166 <= 21'd0;
        end else if (((icmp_ln177_fu_340_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_166 <= add_ln177_1_fu_345_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln177_reg_1499 <= icmp_ln177_fu_340_p2;
        zext_ln109_cast_reg_1494[10 : 0] <= zext_ln109_cast_fu_293_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        cmp221_reg_1512_pp0_iter2_reg <= cmp221_reg_1512;
        cmp221_reg_1512_pp0_iter3_reg <= cmp221_reg_1512_pp0_iter2_reg;
        cmp239_reg_1516_pp0_iter2_reg <= cmp239_reg_1516;
        cmp239_reg_1516_pp0_iter3_reg <= cmp239_reg_1516_pp0_iter2_reg;
        conv_i5868_load_reg_1584 <= conv_i5868_fu_150;
        conv_i58_170_load_reg_1626 <= conv_i58_170_fu_154;
        conv_i58_272_load_reg_1668 <= conv_i58_272_fu_158;
        icmp_ln191_reg_1508_pp0_iter2_reg <= icmp_ln191_reg_1508;
        icmp_ln191_reg_1508_pp0_iter3_reg <= icmp_ln191_reg_1508_pp0_iter2_reg;
        p_load81_reg_1621 <= empty_27_fu_134;
        p_load82_reg_1579 <= empty_fu_126;
        p_load_reg_1663 <= empty_28_fu_142;
        q_err_3rd_local_1_reg_1658 <= q_err_3rd_local_1_fu_719_p3;
        q_err_3rd_local_2_reg_1700 <= q_err_3rd_local_2_fu_886_p3;
        q_err_3rd_local_reg_1616 <= q_err_3rd_local_fu_552_p3;
        tmp1_reg_1590 <= {{quatizer_in_fu_495_p2[9:2]}};
        tmp_10_reg_1674 <= {{quatizer_in_2_fu_829_p2[9:2]}};
        tmp_11_reg_1642 <= add_ln212_3_fu_673_p2[32'd1];
        tmp_12_reg_1690 <= {{quatizer_in_2_fu_829_p2[8:2]}};
        tmp_18_reg_1679 <= add_ln212_5_fu_840_p2[32'd1];
        tmp_19_reg_1684 <= add_ln212_5_fu_840_p2[32'd1];
        tmp_1_reg_1632 <= {{quatizer_in_1_fu_662_p2[9:2]}};
        tmp_2_reg_1595 <= add_ln212_1_fu_506_p2[32'd1];
        tmp_3_reg_1600 <= add_ln212_1_fu_506_p2[32'd1];
        tmp_6_reg_1606 <= {{quatizer_in_fu_495_p2[8:2]}};
        tmp_9_reg_1637 <= add_ln212_3_fu_673_p2[32'd1];
        tmp_s_reg_1648 <= {{quatizer_in_1_fu_662_p2[8:2]}};
        trunc_ln191_reg_1503_pp0_iter2_reg <= trunc_ln191_reg_1503;
        trunc_ln191_reg_1503_pp0_iter3_reg <= trunc_ln191_reg_1503_pp0_iter2_reg;
        trunc_ln213_2_reg_1554 <= trunc_ln213_2_fu_410_p1;
        trunc_ln213_5_reg_1564 <= trunc_ln213_5_fu_414_p1;
        trunc_ln213_8_reg_1574 <= trunc_ln213_8_fu_418_p1;
        trunc_ln220_1_reg_1653 <= trunc_ln220_1_fu_715_p1;
        trunc_ln220_2_reg_1695 <= trunc_ln220_2_fu_882_p1;
        trunc_ln220_reg_1611 <= trunc_ln220_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_read_word_1_reg_282 <= ap_phi_reg_pp0_iter0_read_word_1_reg_282;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_read_word_1_reg_282 <= ap_phi_reg_pp0_iter1_read_word_1_reg_282;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln177_fu_340_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp221_reg_1512 <= cmp221_fu_383_p2;
        cmp239_reg_1516 <= cmp239_fu_389_p2;
        icmp_ln191_reg_1508 <= icmp_ln191_fu_378_p2;
        trunc_ln191_reg_1503 <= trunc_ln191_fu_374_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        offset_buffer_1_load_reg_1559 <= offset_buffer_1_q1;
        offset_buffer_2_load_reg_1569 <= offset_buffer_2_q1;
        offset_buffer_load_reg_1549 <= offset_buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_0_0_045228_fu_130 <= sext_ln226_fu_1043_p1;
        p_0_0_0452_132_fu_138 <= sext_ln226_1_fu_1184_p1;
        p_0_0_0452_236_fu_146 <= sext_ln226_2_fu_1325_p1;
    end
end

always @ (*) begin
    if (((icmp_ln177_fu_340_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op64_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        img0_data_blk_n = img0_data_empty_n;
    end else begin
        img0_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op64_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        img0_data_read = 1'b1;
    end else begin
        img0_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        img1_data_blk_n = img1_data_full_n;
    end else begin
        img1_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        img1_data_write = 1'b1;
    end else begin
        img1_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        offset_buffer_1_ce0 = 1'b1;
    end else begin
        offset_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        offset_buffer_1_ce1 = 1'b1;
    end else begin
        offset_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (cmp221_reg_1512_pp0_iter3_reg == 1'd1))) begin
        offset_buffer_1_we0 = 1'b1;
    end else begin
        offset_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        offset_buffer_2_ce0 = 1'b1;
    end else begin
        offset_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        offset_buffer_2_ce1 = 1'b1;
    end else begin
        offset_buffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (cmp221_reg_1512_pp0_iter3_reg == 1'd1))) begin
        offset_buffer_2_we0 = 1'b1;
    end else begin
        offset_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        offset_buffer_ce0 = 1'b1;
    end else begin
        offset_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        offset_buffer_ce1 = 1'b1;
    end else begin
        offset_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (cmp221_reg_1512_pp0_iter3_reg == 1'd1))) begin
        offset_buffer_we0 = 1'b1;
    end else begin
        offset_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln177_1_fu_345_p2 = (indvar_flatten_fu_166 + 21'd1);

assign add_ln182_fu_394_p2 = (select_ln177_fu_359_p3 + 12'd1);

assign add_ln212_1_fu_506_p2 = (add_ln212_fu_501_p2 + trunc_ln213_1_fu_479_p4);

assign add_ln212_2_fu_668_p2 = (trunc_ln213_3_fu_636_p4 + trunc_ln213_5_reg_1564);

assign add_ln212_3_fu_673_p2 = (add_ln212_2_fu_668_p2 + trunc_ln213_4_fu_646_p4);

assign add_ln212_4_fu_835_p2 = (trunc_ln213_6_fu_803_p4 + trunc_ln213_8_reg_1574);

assign add_ln212_5_fu_840_p2 = (add_ln212_4_fu_835_p2 + trunc_ln213_7_fu_813_p4);

assign add_ln212_fu_501_p2 = (trunc_ln213_fu_475_p1 + trunc_ln213_2_reg_1554);

assign add_ln213_2_fu_656_p2 = ($signed(zext_ln213_1_fu_628_p1) + $signed(sext_ln213_3_fu_632_p1));

assign add_ln213_4_fu_823_p2 = ($signed(zext_ln213_2_fu_795_p1) + $signed(sext_ln213_5_fu_799_p1));

assign add_ln213_fu_489_p2 = ($signed(zext_ln213_fu_467_p1) + $signed(sext_ln213_1_fu_471_p1));

assign add_ln216_1_fu_1108_p2 = (tmp_s_reg_1648 + zext_ln217_3_fu_1100_p1);

assign add_ln216_2_fu_1249_p2 = (tmp_12_reg_1690 + zext_ln217_5_fu_1241_p1);

assign add_ln216_fu_967_p2 = (tmp_6_reg_1606 + zext_ln217_1_fu_959_p1);

assign add_ln225_1_fu_1017_p2 = ($signed(sext_ln225_1_fu_983_p1) + $signed(sub_ln225_fu_1001_p2));

assign add_ln225_3_fu_1148_p2 = ($signed(sext_ln225_6_fu_1120_p1) + $signed(sext_ln209_5_fu_1094_p1));

assign add_ln225_4_fu_1158_p2 = ($signed(sext_ln225_9_fu_1124_p1) + $signed(sub_ln225_1_fu_1142_p2));

assign add_ln225_6_fu_1289_p2 = ($signed(sext_ln225_14_fu_1261_p1) + $signed(sext_ln209_7_fu_1235_p1));

assign add_ln225_7_fu_1299_p2 = ($signed(sext_ln225_15_fu_1265_p1) + $signed(sub_ln225_2_fu_1283_p2));

assign add_ln225_fu_1007_p2 = ($signed(sext_ln225_fu_979_p1) + $signed(sext_ln209_3_fu_953_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (img1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op64_read_state3 == 1'b1) & (img0_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (img1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op64_read_state3 == 1'b1) & (img0_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (img1_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op64_read_state3 == 1'b1) & (img0_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op64_read_state3 == 1'b1) & (img0_data_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((icmp_ln191_reg_1508_pp0_iter3_reg == 1'd1) & (img1_data_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_180 = (cmp221_reg_1512_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_209 = (cmp221_reg_1512_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_238 = (cmp221_reg_1512_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_52 = (icmp_ln177_fu_340_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_55 = (icmp_ln177_fu_340_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_58 = (icmp_ln177_fu_340_p2 == 1'd0);
end

assign ap_enable_operation_66 = (1'b1 == 1'b1);

assign ap_enable_operation_68 = (1'b1 == 1'b1);

assign ap_enable_operation_70 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_read_word_1_reg_282 = 'bx;

always @ (*) begin
    ap_predicate_op64_read_state3 = ((icmp_ln191_reg_1508 == 1'd1) & (icmp_ln177_reg_1499 == 1'd0));
end

assign cmp221_fu_383_p2 = ((select_ln177_fu_359_p3 != 12'd0) ? 1'b1 : 1'b0);

assign cmp239_fu_389_p2 = ((width == trunc_ln191_fu_374_p1) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_340_p2 = ((indvar_flatten_fu_166 == mul_ln177) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_354_p2 = ((col_index_1_fu_162 == add_ln177) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_378_p2 = (($signed(select_ln177_fu_359_p3) < $signed(zext_ln109_cast_reg_1494)) ? 1'b1 : 1'b0);

assign idxprom233_fu_946_p1 = sub232_fu_941_p2;

assign img1_data_din = {{{out_tmp_5_fu_1368_p3}, {out_tmp_3_fu_1227_p3}}, {out_tmp_1_fu_1086_p3}};

assign in_pixel_1_fu_583_p4 = {{ap_phi_reg_pp0_iter3_read_word_1_reg_282[15:8]}};

assign in_pixel_2_fu_750_p4 = {{ap_phi_reg_pp0_iter3_read_word_1_reg_282[23:16]}};

assign in_pixel_fu_428_p1 = ap_phi_reg_pp0_iter3_read_word_1_reg_282[7:0];

assign offset_buffer_1_address0 = idxprom233_fu_946_p1;

assign offset_buffer_1_address1 = zext_ln182_fu_367_p1;

assign offset_buffer_1_d0 = p_0_0_0452_132_fu_138;

assign offset_buffer_2_address0 = idxprom233_fu_946_p1;

assign offset_buffer_2_address1 = zext_ln182_fu_367_p1;

assign offset_buffer_2_d0 = p_0_0_0452_236_fu_146;

assign offset_buffer_address0 = idxprom233_fu_946_p1;

assign offset_buffer_address1 = zext_ln182_fu_367_p1;

assign offset_buffer_d0 = p_0_0_045228_fu_130;

assign or_ln244_1_fu_1200_p2 = (tmp_15_fu_1192_p3 | cmp239_reg_1516_pp0_iter3_reg);

assign or_ln244_2_fu_1341_p2 = (tmp_21_fu_1333_p3 | cmp239_reg_1516_pp0_iter3_reg);

assign or_ln244_fu_1059_p2 = (tmp_5_fu_1051_p3 | cmp239_reg_1516_pp0_iter3_reg);

assign or_ln247_1_fu_1221_p2 = (tmp_16_fu_1205_p3 | or_ln244_1_fu_1200_p2);

assign or_ln247_2_fu_1362_p2 = (tmp_22_fu_1346_p3 | or_ln244_2_fu_1341_p2);

assign or_ln247_fu_1080_p2 = (tmp_7_fu_1064_p3 | or_ln244_fu_1059_p2);

assign out_tmp_1_fu_1086_p3 = ((or_ln247_fu_1080_p2[0:0] == 1'b1) ? select_ln244_fu_1072_p3 : out_tmp_fu_962_p2);

assign out_tmp_2_fu_1103_p2 = (tmp_1_reg_1632 + zext_ln217_2_fu_1097_p1);

assign out_tmp_3_fu_1227_p3 = ((or_ln247_1_fu_1221_p2[0:0] == 1'b1) ? select_ln244_1_fu_1213_p3 : out_tmp_2_fu_1103_p2);

assign out_tmp_4_fu_1244_p2 = (tmp_10_reg_1674 + zext_ln217_4_fu_1238_p1);

assign out_tmp_5_fu_1368_p3 = ((or_ln247_2_fu_1362_p2[0:0] == 1'b1) ? select_ln244_2_fu_1354_p3 : out_tmp_4_fu_1244_p2);

assign out_tmp_fu_962_p2 = (tmp1_reg_1590 + zext_ln217_fu_956_p1);

assign q_2nd_err_scale7_1_fu_609_p2 = ($signed(sext_ln209_6_fu_605_p1) - $signed(sext_ln209_1_fu_593_p1));

assign q_2nd_err_scale7_2_fu_776_p2 = ($signed(sext_ln209_8_fu_772_p1) - $signed(sext_ln209_2_fu_760_p1));

assign q_2nd_err_scale7_fu_448_p2 = ($signed(sext_ln209_4_fu_444_p1) - $signed(sext_ln209_fu_432_p1));

assign q_2nd_err_scale7by16_1_fu_615_p4 = {{q_2nd_err_scale7_1_fu_609_p2[9:4]}};

assign q_2nd_err_scale7by16_2_fu_782_p4 = {{q_2nd_err_scale7_2_fu_776_p2[9:4]}};

assign q_2nd_err_scale7by16_fu_454_p4 = {{q_2nd_err_scale7_fu_448_p2[9:4]}};

assign q_err_3rd_local_1_fu_719_p3 = {{tmp_9_fu_689_p3}, {trunc_ln220_1_fu_715_p1}};

assign q_err_3rd_local_2_fu_886_p3 = {{tmp_18_fu_856_p3}, {trunc_ln220_2_fu_882_p1}};

assign q_err_3rd_local_fu_552_p3 = {{tmp_2_fu_522_p3}, {trunc_ln220_fu_548_p1}};

assign quatizer_in_1_fu_662_p2 = ($signed(add_ln213_2_fu_656_p2) + $signed(sext_ln213_2_fu_625_p1));

assign quatizer_in_2_fu_829_p2 = ($signed(add_ln213_4_fu_823_p2) + $signed(sext_ln213_4_fu_792_p1));

assign quatizer_in_fu_495_p2 = ($signed(add_ln213_fu_489_p2) + $signed(sext_ln213_fu_464_p1));

assign select_ln177_fu_359_p3 = ((icmp_ln182_fu_354_p2[0:0] == 1'b1) ? 12'd0 : col_index_1_fu_162);

assign select_ln230_1_fu_576_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : conv_i5868_fu_150);

assign select_ln230_2_fu_736_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : q_err_3rd_local_1_fu_719_p3);

assign select_ln230_3_fu_743_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : conv_i58_170_fu_154);

assign select_ln230_4_fu_897_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : q_err_3rd_local_2_fu_886_p3);

assign select_ln230_5_fu_904_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : conv_i58_272_fu_158);

assign select_ln230_fu_569_p3 = ((cmp239_reg_1516_pp0_iter2_reg[0:0] == 1'b1) ? 3'd0 : q_err_3rd_local_fu_552_p3);

assign select_ln244_1_fu_1213_p3 = ((or_ln244_1_fu_1200_p2[0:0] == 1'b1) ? 8'd0 : 8'd63);

assign select_ln244_2_fu_1354_p3 = ((or_ln244_2_fu_1341_p2[0:0] == 1'b1) ? 8'd0 : 8'd63);

assign select_ln244_fu_1072_p3 = ((or_ln244_fu_1059_p2[0:0] == 1'b1) ? 8'd0 : 8'd63);

assign sext_ln209_1_fu_593_p0 = conv_i58_170_fu_154;

assign sext_ln209_1_fu_593_p1 = sext_ln209_1_fu_593_p0;

assign sext_ln209_2_fu_760_p0 = conv_i58_272_fu_158;

assign sext_ln209_2_fu_760_p1 = sext_ln209_2_fu_760_p0;

assign sext_ln209_3_fu_953_p1 = conv_i5868_load_reg_1584;

assign sext_ln209_4_fu_444_p1 = $signed(tmp_fu_436_p3);

assign sext_ln209_5_fu_1094_p1 = conv_i58_170_load_reg_1626;

assign sext_ln209_6_fu_605_p1 = $signed(tmp_8_fu_597_p3);

assign sext_ln209_7_fu_1235_p1 = conv_i58_272_load_reg_1668;

assign sext_ln209_8_fu_772_p1 = $signed(tmp_17_fu_764_p3);

assign sext_ln209_fu_432_p0 = conv_i5868_fu_150;

assign sext_ln209_fu_432_p1 = sext_ln209_fu_432_p0;

assign sext_ln213_1_fu_471_p1 = $signed(q_2nd_err_scale7by16_fu_454_p4);

assign sext_ln213_2_fu_625_p1 = offset_buffer_1_load_reg_1559;

assign sext_ln213_3_fu_632_p1 = $signed(q_2nd_err_scale7by16_1_fu_615_p4);

assign sext_ln213_4_fu_792_p1 = offset_buffer_2_load_reg_1569;

assign sext_ln213_5_fu_799_p1 = $signed(q_2nd_err_scale7by16_2_fu_782_p4);

assign sext_ln213_fu_464_p1 = offset_buffer_load_reg_1549;

assign sext_ln225_10_fu_1154_p1 = $signed(add_ln225_3_fu_1148_p2);

assign sext_ln225_11_fu_1164_p1 = $signed(add_ln225_4_fu_1158_p2);

assign sext_ln225_12_fu_1268_p1 = q_err_3rd_local_2_reg_1700;

assign sext_ln225_13_fu_1279_p1 = $signed(shl_ln225_5_fu_1271_p4);

assign sext_ln225_14_fu_1261_p1 = $signed(shl_ln225_4_fu_1254_p3);

assign sext_ln225_15_fu_1265_p1 = p_load_reg_1663;

assign sext_ln225_16_fu_1295_p1 = $signed(add_ln225_6_fu_1289_p2);

assign sext_ln225_17_fu_1305_p1 = $signed(add_ln225_7_fu_1299_p2);

assign sext_ln225_1_fu_983_p1 = p_load82_reg_1579;

assign sext_ln225_2_fu_986_p1 = q_err_3rd_local_reg_1616;

assign sext_ln225_3_fu_997_p1 = $signed(shl_ln225_1_fu_989_p4);

assign sext_ln225_4_fu_1013_p1 = $signed(add_ln225_fu_1007_p2);

assign sext_ln225_5_fu_1023_p1 = $signed(add_ln225_1_fu_1017_p2);

assign sext_ln225_6_fu_1120_p1 = $signed(shl_ln225_2_fu_1113_p3);

assign sext_ln225_7_fu_1127_p1 = q_err_3rd_local_1_reg_1658;

assign sext_ln225_8_fu_1138_p1 = $signed(shl_ln225_3_fu_1130_p4);

assign sext_ln225_9_fu_1124_p1 = p_load81_reg_1621;

assign sext_ln225_fu_979_p1 = $signed(shl_ln1_fu_972_p3);

assign sext_ln226_1_fu_1184_p1 = $signed(tmp_14_fu_1174_p4);

assign sext_ln226_2_fu_1325_p1 = $signed(tmp_20_fu_1315_p4);

assign sext_ln226_fu_1043_p1 = $signed(tmp_4_fu_1033_p4);

assign shl_ln1_fu_972_p3 = {{conv_i5868_load_reg_1584}, {2'd0}};

assign shl_ln225_1_fu_989_p4 = {{{tmp_2_reg_1595}, {trunc_ln220_reg_1611}}, {2'd0}};

assign shl_ln225_2_fu_1113_p3 = {{conv_i58_170_load_reg_1626}, {2'd0}};

assign shl_ln225_3_fu_1130_p4 = {{{tmp_9_reg_1637}, {trunc_ln220_1_reg_1653}}, {2'd0}};

assign shl_ln225_4_fu_1254_p3 = {{conv_i58_272_load_reg_1668}, {2'd0}};

assign shl_ln225_5_fu_1271_p4 = {{{tmp_18_reg_1679}, {trunc_ln220_2_reg_1695}}, {2'd0}};

assign sub232_fu_941_p2 = ($signed(trunc_ln191_reg_1503_pp0_iter3_reg) + $signed(11'd2047));

assign sub_ln225_1_fu_1142_p2 = ($signed(sext_ln225_8_fu_1138_p1) - $signed(sext_ln225_7_fu_1127_p1));

assign sub_ln225_2_fu_1283_p2 = ($signed(sext_ln225_13_fu_1279_p1) - $signed(sext_ln225_12_fu_1268_p1));

assign sub_ln225_fu_1001_p2 = ($signed(sext_ln225_3_fu_997_p1) - $signed(sext_ln225_2_fu_986_p1));

assign sum_tmp_1_fu_1168_p2 = ($signed(sext_ln225_11_fu_1164_p1) + $signed(sext_ln225_10_fu_1154_p1));

assign sum_tmp_2_fu_1309_p2 = ($signed(sext_ln225_17_fu_1305_p1) + $signed(sext_ln225_16_fu_1295_p1));

assign sum_tmp_fu_1027_p2 = ($signed(sext_ln225_5_fu_1023_p1) + $signed(sext_ln225_4_fu_1013_p1));

assign tmp_14_fu_1174_p4 = {{sum_tmp_1_fu_1168_p2[6:4]}};

assign tmp_15_fu_1192_p3 = out_tmp_2_fu_1103_p2[32'd7];

assign tmp_16_fu_1205_p3 = add_ln216_1_fu_1108_p2[32'd6];

assign tmp_17_fu_764_p1 = conv_i58_272_fu_158;

assign tmp_17_fu_764_p3 = {{tmp_17_fu_764_p1}, {3'd0}};

assign tmp_18_fu_856_p3 = add_ln212_5_fu_840_p2[32'd1];

assign tmp_20_fu_1315_p4 = {{sum_tmp_2_fu_1309_p2[6:4]}};

assign tmp_21_fu_1333_p3 = out_tmp_4_fu_1244_p2[32'd7];

assign tmp_22_fu_1346_p3 = add_ln216_2_fu_1249_p2[32'd6];

assign tmp_2_fu_522_p3 = add_ln212_1_fu_506_p2[32'd1];

assign tmp_4_fu_1033_p4 = {{sum_tmp_fu_1027_p2[6:4]}};

assign tmp_5_fu_1051_p3 = out_tmp_fu_962_p2[32'd7];

assign tmp_7_fu_1064_p3 = add_ln216_fu_967_p2[32'd6];

assign tmp_8_fu_597_p1 = conv_i58_170_fu_154;

assign tmp_8_fu_597_p3 = {{tmp_8_fu_597_p1}, {3'd0}};

assign tmp_9_fu_689_p3 = add_ln212_3_fu_673_p2[32'd1];

assign tmp_fu_436_p1 = conv_i5868_fu_150;

assign tmp_fu_436_p3 = {{tmp_fu_436_p1}, {3'd0}};

assign trunc_ln191_fu_374_p1 = select_ln177_fu_359_p3[10:0];

assign trunc_ln213_1_fu_479_p4 = {{q_2nd_err_scale7_fu_448_p2[5:4]}};

assign trunc_ln213_2_fu_410_p0 = offset_buffer_q1;

assign trunc_ln213_2_fu_410_p1 = trunc_ln213_2_fu_410_p0[1:0];

assign trunc_ln213_3_fu_636_p4 = {{ap_phi_reg_pp0_iter3_read_word_1_reg_282[9:8]}};

assign trunc_ln213_4_fu_646_p4 = {{q_2nd_err_scale7_1_fu_609_p2[5:4]}};

assign trunc_ln213_5_fu_414_p0 = offset_buffer_1_q1;

assign trunc_ln213_5_fu_414_p1 = trunc_ln213_5_fu_414_p0[1:0];

assign trunc_ln213_6_fu_803_p4 = {{ap_phi_reg_pp0_iter3_read_word_1_reg_282[17:16]}};

assign trunc_ln213_7_fu_813_p4 = {{q_2nd_err_scale7_2_fu_776_p2[5:4]}};

assign trunc_ln213_8_fu_418_p0 = offset_buffer_2_q1;

assign trunc_ln213_8_fu_418_p1 = trunc_ln213_8_fu_418_p0[1:0];

assign trunc_ln213_fu_475_p1 = ap_phi_reg_pp0_iter3_read_word_1_reg_282[1:0];

assign trunc_ln220_1_fu_715_p1 = quatizer_in_1_fu_662_p2[1:0];

assign trunc_ln220_2_fu_882_p1 = quatizer_in_2_fu_829_p2[1:0];

assign trunc_ln220_fu_548_p1 = quatizer_in_fu_495_p2[1:0];

assign zext_ln109_cast_fu_293_p1 = zext_ln109;

assign zext_ln182_fu_367_p1 = select_ln177_fu_359_p3;

assign zext_ln213_1_fu_628_p1 = in_pixel_1_fu_583_p4;

assign zext_ln213_2_fu_795_p1 = in_pixel_2_fu_750_p4;

assign zext_ln213_fu_467_p1 = in_pixel_fu_428_p1;

assign zext_ln217_1_fu_959_p1 = tmp_3_reg_1600;

assign zext_ln217_2_fu_1097_p1 = tmp_11_reg_1642;

assign zext_ln217_3_fu_1100_p1 = tmp_11_reg_1642;

assign zext_ln217_4_fu_1238_p1 = tmp_19_reg_1684;

assign zext_ln217_5_fu_1241_p1 = tmp_19_reg_1684;

assign zext_ln217_fu_956_p1 = tmp_3_reg_1600;

always @ (posedge ap_clk) begin
    zext_ln109_cast_reg_1494[11] <= 1'b0;
end

endmodule //QuantizationDithering_xf_QuatizationDithering_Pipeline_LOOP_ROW_LOOP_COL
